{"data":{"site":{"siteMetadata":{"title":"ReactiveConf Prague 2018","author":"Ondřej Chrastina"}},"markdownRemark":{"id":"bd0b99bb-4caf-5651-a767-e8910c547851","excerpt":"Author: Ryan Chenkie Timeline Specs was publish in 2015 How to optimize Do not use all of the optimization you are suggested. Think how does…","html":"<p>Author: Ryan Chenkie</p>\n<h1>Timeline</h1>\n<p>Specs was publish in 2015</p>\n<h1>How to optimize</h1>\n<p>Do not use all of the optimization you are suggested. Think how does they influence each other.</p>\n<h2>Tips</h2>\n<ul>\n<li>group requests and alias them if som of the data are repeating</li>\n<li>\n<p>React - in exchange to classic queries in the components use <strong>apollo</strong> and use <code class=\"language-text\">useBatching</code> option to <code class=\"language-text\">true</code></p>\n<ul>\n<li><strong>Batching would cost the request length same as th slowest sub-query</strong></li>\n</ul>\n</li>\n<li>\n<p>Try to shorter the query strings</p>\n<ul>\n<li>\n<p>use encoding for shortening </p>\n<ul>\n<li>server knows the hash - return response</li>\n<li>does not know > server return tha does not know > client sends full query string > sever cache query string with hash and return request</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1>Apollo engine</h1>\n<ul>\n<li>Analytics for graphql engine - like google analytic for graphql</li>\n</ul>\n<h1>Smart resolvers</h1>\n<ul>\n<li>\n<p>query could be resolved by multiple resolvers </p>\n<ul>\n<li>sometime the does not share data/context event it could lead to more efficient data fetch</li>\n<li>\n<p><strong>Solve tip</strong> </p>\n<ul>\n<li>Note - Hasura was optimizing we promote them on <a href=\"https://hacktoberfest-event-brno-2018.herokuapp.com/resources\">hacktoberfest</a> </li>\n<li>From abstract tree you got from ghrphql it is possible to change mapping to SQL query (or other datasource you use)</li>\n<li>transformation result data to jsou could be also optimized</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1>Query splitting</h1>\n<p>Sometimes it is possible to split query to get more important part of data first and then wait for the rest</p>\n<h1>Optimitic UI</h1>\n<ul>\n<li>same as for Rest API - show the result (i.e. data were saved) + and then send the request and in case of error notify user</li>\n</ul>\n<h1>Key notes</h1>\n<ul>\n<li>wait after you really feel that you app need to be optimized </li>\n<li>expect the changes</li>\n<li>experiment with optimizations </li>\n</ul>","frontmatter":{"title":"Optimizing GraphQL Applications","date":"October 29, 2018"}}},"pageContext":{"slug":"/Optimizing GraphQL Applications/","previous":{"fields":{"slug":"/Increasing User Access through Service Workers/"},"frontmatter":{"title":"Increasing User Access through Service Workers"}},"next":null}}