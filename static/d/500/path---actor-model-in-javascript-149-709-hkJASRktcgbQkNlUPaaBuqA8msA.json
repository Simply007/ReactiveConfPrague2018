{"data":{"site":{"siteMetadata":{"title":"ReactiveConf Prague 2018","author":"Ondřej Chrastina"}},"markdownRemark":{"id":"5ba8e2c2-d24e-58c9-a3d1-8cdc1a59c7d2","excerpt":"Author: ISMAIL MUHAMMAD Use case - chat room user connect to the one room in the room group problem: switching users between room there is…","html":"<p>Author: ISMAIL MUHAMMAD</p>\n<h1>Use case - chat room</h1>\n<ul>\n<li>\n<p>user connect to the one room in the room group</p>\n<ul>\n<li><strong>problem: switching users between room</strong></li>\n<li>there is no specific order in the callbacks when user are changing the rooms</li>\n<li>threads + blocking - expensive to create thread and they are limited</li>\n</ul>\n</li>\n</ul>\n<h2>Solution</h2>\n<ol>\n<li>\n<p>assign ID to the subscription</p>\n<ul>\n<li>not really scaling</li>\n</ul>\n</li>\n<li>\n<p>Actor model</p>\n<ul>\n<li>\n<p>actor: entity(object) </p>\n<ul>\n<li>you send messages to the actor</li>\n<li>all messages are queued in the actor</li>\n<li>keeps local state and it is not accessible from the outside</li>\n</ul>\n</li>\n<li>\n<p>how does it solve concurrency?</p>\n<ul>\n<li><strong>using <a href=\"https://github.com/ismailhabib/actrix\">Actrix</a></strong> library implementing actor model</li>\n</ul>\n</li>\n<li>\n<p>basically create the async processing to be sequential - badd response and UX</p>\n<ul>\n<li>Solving</li>\n<li>\n<p>Short circuiting -> try to optimize the actor queue - not process old message whether there are some more recent updates</p>\n<ul>\n<li>using cancellation strategy</li>\n<li>using cancelable promises - different syntax - no async await, but <code class=\"language-text\">*</code> and <code class=\"language-text\">yield</code>  to be able to group cancellations</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h1>Key notes</h1>\n<ul>\n<li>Actrix could be more efficient in specific scenarios</li>\n</ul>\n<h1>Questions</h1>\n<ul>\n<li>\n<p>Testing app</p>\n<ul>\n<li>just some tests in repository - by case to case - no framework  </li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Actor Model in Javascript","date":"October 30, 2018"}}},"pageContext":{"slug":"/Actor Model in Javascript/","previous":{"fields":{"slug":"/Reactive iOS App Development/"},"frontmatter":{"title":"Reactive iOS App Development"}},"next":{"fields":{"slug":"/Convenient data fetching with Higher Order Components/"},"frontmatter":{"title":"Convenient data fetching with Higher Order Components"}}}}